setwd("~/Project/R/cbe")
# main.R
library(tidyverse)
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- students_info()
# main.R
library(tidyverse)
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- students_info()
st_info <- students_info()
st_info <- students_info()
# main.R
library(tidyverse)
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- students_info()
# main.R
library(tidyverse)
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- students_info()
# main.R
library(tidyverse)
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- students_info()
# main.R
library(tidyverse)
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- students_info()
st_info
# main.R
library(tidyverse)
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- students_info()
st_info
# main.R
library(tidyverse)
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- as_tibble(students_info())
st_info
# 학과별, 국적별 학생 수 집계
result <- st_info %>%
group_by(학과, 국적) %>%
summarise(학생수 = n(), .groups = "drop")
# 결과 출력
print(result)
result_경영학부 <- result %>% filter(학과 = '경영학부') %>% select(국적, 학생수)
result_경영학부 <- result %>% filter(학과 == '경영학부') %>% select(국적, 학생수)
result_경영학부
result_경영학부_외국인 <- result %>% filter(학과 == '경영학부' & 국적 != '대한민국') %>% select(국적, 학생수)
str(result_경영학부_외국인)
mx_경영학부_외국인 <- as.matrix(result_경영학부_외국인)
barplot(mx_경영학부_외국인)
View(mx_경영학부_외국인)
barplot(mx_경영학부_외국인)
install.packages("showtext")
library(showtext)
# 한글 폰트 추가 (예: Noto Sans KR)
font_add_google("Noto Sans KR", "notosanskr")
showtext_auto()
barplot(mx_경영학부_외국인)
mx_경영학부_외국인2 <- t(mx_경영학부_외국인)
barplot(mx_경영학부_외국인2)
mx_경영학부_외국인2
mx_경영학부_외국인3 <- rownames_to_column(mx_경영학부_외국인)
# 학과별, 국적별 학생 수 집계
st_foreigner <- st_info %>%
group_by(학과, 국적) %>%
summarise(학생수 = n(), .groups = "drop") %>% filter(학과 == '경영학부' & 국적 != '대한민국') %>% select(국적, 학생수)
# 결과 출력
print(st_foreigner)
st_business_for <- rownames_to_column(st_foreigner)
st_business_for
st_business_for <- t(st_foreigner)
st_business_for
library(tidyr)
# 학과별, 국적별 학생 수 집계
st_foreigner <- st_info %>%
group_by(학과, 국적) %>%
summarise(학생수 = n(), .groups = "drop") %>% filter(학과 == '경영학부' & 국적 != '대한민국') %>% select(국적, 학생수)  %>%
pivot_wider(names_from = 국적, values_from = 학생수, values_fill = 0)
# 결과 출력
print(st_foreigner)
barplot(st_foreigner)
barplot(as.matrix(st_foreigner)
barplot(as.matrix(st_foreigner))
barplot(as.matrix(st_foreigner))
# 결과 출력
print(st_foreigner)
# main.R
library(tidyverse)
# library(tidyr)
# library(showtext)
# 한글 폰트 추가 (예: Noto Sans KR)
font_add_google("Noto Sans KR", "notosanskr")
showtext_auto()
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- as_tibble(students_info())
# 학과별, 국적별 학생 수 집계
st_foreigner <- st_info %>%
group_by(학과, 국적) %>%
summarise(학생수 = n(), .groups = "drop") %>% filter(학과 == '경영학부' & 국적 != '대한민국') %>% select(국적, 학생수)  %>%
pivot_wider(names_from = 국적, values_from = 학생수, values_fill = 0)
# 결과 출력
print(st_foreigner)
# barplot 출력
barplot(as.matrix(st_foreigner))
# main.R
library(tidyverse)
# library(tidyr)
library(showtext)
# 한글 폰트 추가 (예: Noto Sans KR)
font_add_google("Noto Sans KR", "notosanskr")
showtext_auto()
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- as_tibble(students_info())
# barplot 출력
barplot(as.matrix(st_foreigner),
cex.axis = 0.8, cex.names=0.7,
xlab='nationality', ylab='students count')
# main.R
library(tidyverse)
# library(tidyr)
library(showtext)
# 한글 폰트 추가 (예: Noto Sans KR)
font_add_google("Noto Sans KR", "notosanskr")
showtext_auto()
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- as_tibble(students_info())
# 학과별, 국적별 학생 수 집계
st_foreigner <- st_info %>%
group_by(학과, 국적) %>%
summarise(학생수 = n(), .groups = "drop") %>% filter(학과 == '경영학부' & 국적 != '대한민국') %>% select(국적, 학생수)  %>%
pivot_wider(names_from = 국적, values_from = 학생수, values_fill = 0)
# 결과 출력
print(st_foreigner)
# barplot 출력
barplot(as.matrix(st_foreigner),
cex.axis = 0.8, cex.names=0.7,
xlab='nationality', ylab='students count')
# barplot 출력
barplot(as.matrix(st_foreigner),
cex.axis = 0.8, cex.names=0.5,
xlab='nationality', ylab='students count')
# barplot 출력
barplot(as.matrix(st_foreigner),
cex.axis = 0.8, cex.names=0.5,
xlab='Nationality', ylab='Number of students')
# barplot 출력
barplot(as.matrix(st_foreigner),
cex.axis = 0.8, cex.names=0.6,
xlab='Nationality', ylab='Number of students')
# barplot 출력
barplot(as.matrix(st_foreigner),
cex.axis = 1, cex.names=0.6,
xlab='Nationality', ylab='Number of students')
# barplot 출력
barplot(as.matrix(st_foreigner),
cex.axis = 1, cex.names=0.7,
xlab='Nationality', ylab='Number of students')
# barplot 출력
barplot(as.matrix(st_foreigner),
cex.axis = 0.9, cex.names=0.7,
xlab='Nationality', ylab='Number of students')
library(ggplot2)
# Assuming 'st_foreigner' is a data frame with columns 'Nationality' and 'Number_of_students'
ggplot(st_foreigner, aes(x = Nationality, y = Number_of_students)) +
geom_bar(stat = "identity", fill = "skyblue") +
geom_text(aes(label = Number_of_students), vjust = -0.5, size = 3) +  # Add student count on top of bars
labs(x = "Nationality", y = "Number of students") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
axis.text = element_text(size = 9),
axis.title = element_text(size = 11))
library(ggplot2)
ggplot(st_foreigner, aes(x = Nationality, y = Number_of_students)) +
geom_bar(stat = "identity", fill = "skyblue") +
geom_text(aes(label = Number_of_students), vjust = -0.5, size = 3) +  # Add student count on top of bars
labs(x = "Nationality", y = "Number of students") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
axis.text = element_text(size = 9),
axis.title = element_text(size = 11))
st_foreigner
st_foreigner <- st_info %>%
group_by(학과, 국적) %>%
summarise(학생수 = n(), .groups = "drop") %>% filter(학과 == '경영학부' & 국적 != '대한민국') %>% select(국적, 학생수)
st_foreigner
ggplot(st_foreigner, aes(x = 국적, y = 학생수)) +
geom_bar(stat = "identity", fill = "skyblue") +
geom_text(aes(label = Number_of_students), vjust = -0.5, size = 3) +  # Add student count on top of bars
labs(x = "Nationality", y = "Number of students") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
axis.text = element_text(size = 9),
axis.title = element_text(size = 11))
ggplot(st_foreigner, aes(x = 국적, y = 학생수))
ggplot(st_foreigner, aes(x = 국적, y = 학생수)) +
geom_bar(stat = "identity", fill = "skyblue")
# main.R
library(tidyverse)
# library(tidyr)
library(showtext)
# 한글 폰트 추가 (예: Noto Sans KR)
font_add_google("Noto Sans KR", "notosanskr")
showtext_auto()
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- as_tibble(students_info())
# 학과별, 국적별 학생 수 집계
st_foreigner <- st_info %>%
group_by(학과, 국적) %>%
summarise(학생수 = n(), .groups = "drop") %>% filter(학과 == '경영학부' & 국적 != '대한민국') %>% select(국적, 학생수)
st_foreigner_for_barplot <- st_info %>%
group_by(학과, 국적) %>%
summarise(학생수 = n(), .groups = "drop") %>% filter(학과 == '경영학부' & 국적 != '대한민국') %>% select(국적, 학생수)  %>%
pivot_wider(names_from = 국적, values_from = 학생수, values_fill = 0)
# barplot 출력
barplot(as.matrix(st_foreigner_for_barplot),
cex.axis = 0.9, cex.names=0.7,
xlab='Nationality', ylab='Number of students')
library(ggplot2)
# Assuming 'st_foreigner' is a data frame with columns 'Nationality' and 'Number_of_students'
ggplot(st_foreigner, aes(x = 국적, y = 학생수)) +
geom_bar(stat = "identity", fill = "skyblue") +
geom_text(aes(label = Number_of_students), vjust = -0.5, size = 3) +  # Add student count on top of bars
labs(x = "Nationality", y = "Number of students") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
axis.text = element_text(size = 9),
axis.title = element_text(size = 11))
ggplot(st_foreigner, aes(x = 국적, y = 학생수)) +
geom_bar(stat = "identity", fill = "skyblue") +
geom_text(aes(label = Number_of_students), vjust = -0.5, size = 3) +  # Add student count on top of bars
labs(x = "Nationality", y = "Number of students")
ggplot(st_foreigner, aes(x = 국적, y = 학생수)) +
geom_bar(stat = "identity", fill = "skyblue") +
geom_text(aes(label = 학생수), vjust = -0.5, size = 3)
ggplot(st_foreigner, aes(x = 국적, y = 학생수)) +
geom_bar(stat = "identity", fill = "skyblue") +
geom_text(aes(label = 학생수), vjust = -0.5, size = 3) +  # Add student count on top of bars
labs(x = "Nationality", y = "Number of students") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
axis.text = element_text(size = 9),
axis.title = element_text(size = 11))
# main.R
library(tidyverse)
# library(tidyr)
library(showtext)
# 한글 폰트 추가 (예: Noto Sans KR)
font_add_google("Noto Sans KR", "notosanskr")
showtext_auto()
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- as_tibble(students_info())
# main.R
library(tidyverse)
# library(tidyr)
library(showtext)
# 한글 폰트 추가 (예: Noto Sans KR)
font_add_google("Noto Sans KR", "notosanskr")
showtext_auto()
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- as_tibble(students_info())
# 학과별, 국적별 학생 수 집계
st_foreigner <- st_info %>%
group_by(학과, 국적) %>%
summarise(학생수 = n(), .groups = "drop") %>% filter(학과 == '경영학부' & 국적 != '대한민국') %>% select(국적, 학생수)
st_foreigner_for_barplot <- st_info %>%
group_by(학과, 국적) %>%
summarise(학생수 = n(), .groups = "drop") %>% filter(학과 == '경영학부' & 국적 != '대한민국') %>% select(국적, 학생수)  %>%
pivot_wider(names_from = 국적, values_from = 학생수, values_fill = 0)
# 결과 출력
print(st_foreigner)
# barplot 출력
barplot(as.matrix(st_foreigner_for_barplot),
cex.axis = 0.9, cex.names=0.7,
xlab='Nationality', ylab='Number of students')
library(ggplot2)
# Assuming 'st_foreigner' is a data frame with columns 'Nationality' and 'Number_of_students'
ggplot(st_foreigner, aes(x = 국적, y = 학생수)) +
geom_bar(stat = "identity", fill = "skyblue") +
geom_text(aes(label = 학생수), vjust = -0.5, size = 3) +  # Add student count on top of bars
labs(x = "Nationality", y = "Number of students") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
axis.text = element_text(size = 9),
axis.title = element_text(size = 11))
# main.R
library(tidyverse)
# library(tidyr)
library(showtext)
# 한글 폰트 추가 (예: Noto Sans KR)
font_add_google("Noto Sans KR", "notosanskr")
showtext_auto()
# 데이터 로드
source("scripts/data_loading.R")
# source("scripts/data_preprocessing.R")
# source("scripts/analysis.R")
st_info <- as_tibble(students_info())
# 학과별, 국적별 학생 수 집계
st_foreigner <- st_info %>%
group_by(학과, 국적) %>%
summarise(학생수 = n(), .groups = "drop") %>% filter(학과 == '경영학부' & 국적 != '대한민국') %>% select(국적, 학생수)
st_foreigner_for_barplot <- st_info %>%
group_by(학과, 국적) %>%
summarise(학생수 = n(), .groups = "drop") %>% filter(학과 == '경영학부' & 국적 != '대한민국') %>% select(국적, 학생수)  %>%
pivot_wider(names_from = 국적, values_from = 학생수, values_fill = 0)
# 결과 출력
print(st_foreigner)
# barplot 출력
barplot(as.matrix(st_foreigner_for_barplot),
cex.axis = 0.9, cex.names=0.7,
xlab='Nationality', ylab='Number of students')
library(ggplot2)
# Assuming 'st_foreigner' is a data frame with columns 'Nationality' and 'Number_of_students'
ggplot(st_foreigner, aes(x = 국적, y = 학생수)) +
geom_bar(stat = "identity", fill = "skyblue") +
geom_text(aes(label = 학생수), vjust = -0.5, size = 3) +  # Add student count on top of bars
labs(x = "Nationality", y = "Number of students") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
axis.text = element_text(size = 9),
axis.title = element_text(size = 11))
